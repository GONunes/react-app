name: CD

on:
  push:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  CD:
    runs-on: ubuntu-latest

    steps:
    
      #- name: Configure SSH AWS
        #run: |
          #mkdir -p ~/.ssh/
          #echo "$SSH_KEY" > ~/.ssh/aws-cloud.key
          #chmod 600 ~/.ssh/aws-cloud.key
          #cat >>~/.ssh/config <<END
          #Host aws-cloud
            #HostName $SSH_HOST
            #User $SSH_USER
            #IdentityFile ~/.ssh/aws-cloud.key
            #StrictHostKeyChecking no
          #END
        #env:
          #SSH_USER: ${{ secrets.AWS_SSH_USER }}
          #SSH_KEY: ${{ secrets.AWS_SSH_KEY }}
          #SSH_HOST: ${{ secrets.AWS_SSH_HOST }}
    
      - name: Checkout repository
        uses: actions/checkout@v3
      

      - name: Set up Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          
          
      - name: Install dependencies
        run: npm install
        
        
      - name: Run the tests
        run: npm run test -- --coverage
        env:
          CI: true
        
      #- name: SonarCloud Scan
        #uses: SonarSource/sonarcloud-github-action@master
        #env:
          #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          #SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          
      - name: Build the application
        run: npm run build

      - name: Deploy Docker
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
          docker build . -t gonunes/react-app:latest
          docker push gonunes/react-app:latest
          
      #- name: Config Container on VM
        #run: |
          #ssh aws-cloud "sudo docker stack rm react-app"
          #ssh aws-cloud "sudo sleep 15"
          #ssh aws-cloud "sudo docker stack deploy -c docker-compose.yml react-app"
          #ssh aws-cloud "sudo docker system prune -f"
